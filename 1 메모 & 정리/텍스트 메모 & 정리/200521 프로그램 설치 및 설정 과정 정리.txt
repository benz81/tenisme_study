

작성일 : 200521 목요일
last update : 200526 수요일


★★★★★★★★★★★★★★★ 들어가기 전에 ★★★★★★★★★★★★★★★

*** 실행하다가 안 되거나 하면 카톡아이디 tenisme 추가해서 물어봐주세요
*** 학원에 계시면 2번 자리로 오셔서 물어보시면 됩니다
*** 물어봐주셨는데 저도 처음보는 오류 케이스 등등을 해결하는 방법은 잘 모를 수도 있습니다
*** 이럴 땐 같이 검색해보거나 강사님한테 물어보거나 합시다
*** 바로 아래에 목차 내용 보시고 필요한 내용을 검색하시면 바로 점프 가능
*** 필요시 내용 수정 or 업데이트하도록 하겠습니다

======================================================

// 목차 기호 설명
  // : 주제
  ★ : 대주제 시작
  ===... : 대주제 끝

★★★★★★★★★★★★★★★ 검색용 목차 ★★★★★★★★★★★★★★★

// VirtualBox(버추얼박스) 설치하기
★ 안드로이드 스튜디오를 우분투에서 돌리기 위한 설치&설정 과정 ★
// 가상머신 우분투(Ubuntu) 생성하기
// 가상머신 기본 셋팅(VirtualBox)
// 우분투용 시동(설치)디스크 다운로드
// 우분투 시동디스크 셋팅하기(VirtualBox)
// 우분투 실행 후 설치시 기본 셋팅
// Extention Pack(익스텐션 팩) 다운로드하기
// 가상머신에 Extention Pack 추가(설치)하기
// 터미널 실행하기(우분투)
// 공유폴더 생성 & 가상머신에 등록하기
// Android Studio(안드로이드 스튜디오) 다운로드(리눅스OS용)
// 안드로이드 스튜디오 설치하기(리눅스OS)
// 나중에 가상머신(Ubuntu)의 안드로이드 스튜디오(선행 : 안스 설치)에서 코딩 후 테스트 실행시 "VT-x"나 "AMD-V"라는 단어가 포함된 에러 메세지가 뜨는 경우 해결방법
===============================
// 안드로이드 스튜디오 다운로드(윈도우OS용)
// 안드로이드 스튜디오(줄여서 안스) 첫 실행시 설정
// 안드로이드 스튜디오에서 새 프로젝트 만들기
// 안드로이드 스튜디오에서 SDK 다운받기
// 안드로이드 스튜디오에서 모듈(module) 만들기
// 안드로이드 가상 시뮬레이터(AVD : Android Virtual Device) 만들기
// 안드로이드 스튜디오 추가 설정(선택 사항)
===============================
★ 버추얼 박스에 CentOS(센트OS)설치하기 ★
// CentOS iso 다운받기
// 버추얼 박스에 센트OS 생성
// 가상머신 기본 설정 :: 버추얼박스
// CentOS설치를 위해 ISO디스크 삽입하기
// 가상머신에서 Cent OS 설치
// 설치 완료 후 첫 실행시
===============================
★ Windows에서 서버(CentOS) 접속하는 방법(PuTTY :: 퍼티 활용) ★
// PuTTY(퍼티) 다운로드 & 설치하기
// CentOS에서 ssh(sshd) 설치하기 :: 서버 설치 & 설정
// CentOS(리눅스)의 ip주소 알아내기 (CentOS에서)
// 서버OS 포트포워딩하기 :: in 버추얼박스
// PuTTY에서 CentOS 서버에 접속하기(최종목적)
===============================
★ CentOS(리눅스)에서 DBMS(MariaDB) 다운로드 & 설치 & 설정하기 ★
// MariaDB(마리아디비) 설치하기
// MariaDB 설치 후 루트 비밀번호 설정하기 (계속 퍼티임)
// 퍼티에서 DBMS(MariaDB) 들어가기
// MariaDB의 포트 번호 보기 (퍼티퍼티)
===============================
★ MySQL Workbench 다운로드 & 설치 & MariaDB에 연결하기 ★
// MySQL Workbench 다운로드
// MySQL Workbench 설치하기
// MySQL Workbench에서 DBMS(MariaDB) 연결하기
===============================

======================================================





// VirtualBox(버추얼박스) 설치하기
  // 버추얼박스 : 가상머신 생성&실행 프로그램
  1. 구글에 virtualbox 검색
  2. Oracle VM VirtualBox 링크 아래에 있는 Downloads 클릭
  3. VirtualBox 6.1.8 platform packages에서 운영체제(윈도우, 리눅스 등) 클릭
  4. 다운로드 후 실행하면 설치됨



★★★이하 안드로이드 스튜디오를 우분투에서 돌리기 위한 설치&설정 과정★★★
// 윈도우에서 안드로이드 스튜디오를 설치하려면 '건너뛰기 끝' 아래로 건너뛰세요(검색으로 건너뛰기 추천)



// 가상머신 우분투(Ubuntu) 생성하기
  // 우분투 : 리눅스OS(운영체제) 이름(like 윈도우)
1. VirtualBox 실행
2. 상단 탭에서 머신 >> 새로 만들기 클릭
3. 머신 이름에 Ubuntu를 적으면 종류와 운영체제가 알아서 알맞게 바뀜
4. 다음 버튼 >> 메모리 할당량 4096MB 입력
5. 지금 새 가상 하드디스크 만들기 선택 후 "만들기" 클릭
6. VDI선택창에서 "동적 할당" 선택
7. 할당 용량 200GB입력
8. 생성 끝





// 가상머신 기본 셋팅(VirtualBox)
1. VirtualBox 실행
2. 좌측 리스트에서 생성한 OS(Ubuntu) 선택(클릭)
3. 상단 아이콘 중 "설정" 클릭
4. 좌측 리스트에서 "일반" >> "고급" 탭 >> 클립보드 공유, 드래그 앤 드롭 둘 다 "양방향" 선택
  // 윈도우와 가상머신이 서로 텍스트 복사 붙여넣기, 파일 옮기기가 가능해짐
5. 좌측 리스트에서 "네트워크" 클릭
6. 다음 사항 확인 후 "확인"버튼 누르기
   "네트워크 어댑터 사용하기" 체크박스에 체크표시하기
   "다음에 연결됨" 옆에 NAT 선택
    // 기본 설정이 이렇게 되어있음
7. ★확인★버튼 누르고 나오기
  // "확인"버튼 안 누르면 설정 저장이 안됨





// 우분투용 시동(설치)디스크 다운로드
  // 가상머신을 만들었다고 바로 실행되는 것이 아님. 설치할 운영체제(Ubuntu)에 맞는 시동 디스크가 있어야 운영체제 설치가 진행되고 우분투 실행이 가능해짐.
1. https://ubuntu.com/download/alternative-downloads 접속
2. 아래로 스크롤해서 Past releases and other flavours 찾기
3. Ubuntu 18.04 LTS (Bionic Beaver) 링크 클릭
4. Desktop image >> 64-bit PC (AMD64) desktop image 링크 클릭
5. 설치 디스크 파일이 다운로드됨





// 우분투 시동디스크 셋팅하기(VirtualBox)
1. VirtualBox 실행
2. 운영체제를 설치할 가상 머신을 클릭하고 "설정" 클릭
3. 좌측 리스트에서 "저장소" 클릭
4. 컨트롤러: IDE 아래의 '비어있음' 클릭
5. 우측에 작은 디스크(원)모양 아이콘 클릭 > Choose/Create a~ 클릭
6. "추가" 버튼 선택 > 다운받은 시동(설치)디스크 선택 후 "열기"버튼 클릭
7. 추가한 디스크를 목록에서 클릭 >> "선택"버튼 클릭
8. ★확인★버튼 클릭





// 우분투 실행 후 설치시 기본 셋팅
1. 선행 : VirtualBox에서 시동디스크 셋팅
2. 시작할 가상머신 클릭하고 "시작"버튼 클릭
3. 언어 선택 >> 우측 Ubuntu 설치 선택
4. 키보드 >> 기본 세팅 선택 >> 계속하기 선택
5. "디스크를 지우고 Ubuntu 설치" 선택 >> 지금 설치 선택
6. 거주지 선택 >> 이름, 컴퓨터 이름, 암호 등 입력 >> "설치"
7. 설치 진행됨





// Extention Pack(익스텐션 팩) 다운로드하기
  // VirtualBox에서 부가적 기능을 제공함
1. 구글에 virtualbox 검색
2. Oracle VM VirtualBox 링크 아래에 있는 Downloads 클릭
3. VirtualBox 6.1.8 Oracle VM VirtualBox Extension Pack >> All supported platforms 클릭 >> 다운로드됨





// 가상머신에 Extention Pack 추가(설치)하기
1. 우분투 가상머신 실행(로그인까지 완료)
2. 실행창 상단 메뉴에서 "장치" >> "게스트 확장 CD이미지 삽입" 선택
3. 우분투 바탕화면에 CD모양 아이콘이 생기면서 'VBox_~~에는' 메세지 뜨면 "실행" 선택
4. 계정 암호 입력 후 엔터 >> 터미널(검은화면) 실행됨
5. 다 실행되고 'Press~' 나오면 엔터키 치고나서 재부팅하기
  // Extention Pack이 잘 설치되었는지 체크하기
    // VirtualBox에서 가상기기 선택 >> 설정 >> 저장소 >> 컨트롤러: IDE 아래가 VBoxGuestAdditions.iso로 바뀌어있으면 성공.





// 터미널 실행하기(우분투)
1. 우분투 실행
2. 메인화면에서 좌측 맨 아래 버튼 클릭
3. 검색에 terminal (한글로 터미널 적어도 됨) >> 터미널 아이콘 클릭해서 실행
  // 검색 없이 바로 터미널 아이콘 찾아서 클릭해도 됨





// 공유폴더 생성 & 가상머신에 등록하기
1. 컴퓨터 D드라이브에 가서 영문으로 폴더 하나 만들기
  // 이게 공유할 폴더가 됨.
2. VirtualBox에서 공유폴더를 추가할 운영체제를 선택하고 실행
3. 실행창 상단 메뉴에서 "장치" >> "공유 폴더" >> "공유 폴더 설정" 클릭
4. 우측에 있는 작은 폴더모양 아이콘 클릭
5. 폴더 경로 우측의 ∨ 클릭 >> "기타..." 클릭
6. D드라이브에 생성했던 폴더 경로 찾아서 폴더 클릭 >> "폴더 선택"클릭
7. 하단의 "자동 마운트" 체크박스에 체크 표시
8. 마운트 지점 옆에 /home/★우분투에서 만든 계정 이름★/share 입력
9. 바로 아래에 있는 "항상 사용하기" 체크박스에 체크 표시
10. ★확인★ 클릭
11. "머신 폴더" 아래에 금방 지정한 폴더가 등록되어있으면 OK.
12. ★확인★ 클릭
  // 공유폴더가 잘 생성되었는지 확인하기(리눅스OS)
    // 가상머신에서 터미널 실행 >> ls(엘에스) 입력 후 엔터 >> 이 목록에 "share" 폴더가 보이면 성공.





// Android Studio(안드로이드 스튜디오) 다운로드(리눅스OS용)
1. 구글에서 android studio 검색 >> 상위에 있는 큰글씨 링크 중에 Download Android Studio ~ 링크 아무거나 클릭(같은 창으로 들어감)
2. 밑으로 쭉 스크롤 >> Android Studio downloads 항목에서 Linux(64-bit) 오른쪽에 있는 링크 클릭
3. "본인은 상기 사용 약관~~~" 체크박스 옆에 체크 표시 >> 다운로드 버튼 클릭
4. 설치파일 다운로드 진행됨





// 안드로이드 스튜디오 설치하기(리눅스OS)
1. 우분투 터미널 실행
2. sudo apt-get update 치고 엔터 >> 계정 비밀번호 입력 >> 엔터
  // 우분투 내 업데이트 가능한 소프트웨어 전체 업데이트하기
  // 비밀번호 입력시 문자 표시 안 되는 것이 정상.
    // 비밀번호 맞으면 다음으로 진행, 틀리면 틀렸다고 메세지 뜸
3. sudo apt install openjdk-8-jre openjdk-8-jdk 치고 엔터 >> [y/N] 뜨면 y 입력 후 엔터
  // openjdk-8-jre와 openjdk-8-jdk 두가지를 설치하라는 명령어
4. sudo snap install android-studio --classic 치고 엔터 >> 설치 진행
  // 여기서 진행 안 되면 sudo apt install snapd 이거 먼저 치고 다시 실행
    // ↑이거는 좀 불확실한 정보 :)
5. android-studio 치고 엔터 누르면 안드로이드 스튜디오 실행됨
6. 이후 안스 실행시 '// 안드로이드 스튜디오(줄여서 ★안스) 첫 실행시 설정'으로 건너뛰시면 됩니다




// 나중에 가상머신(Ubuntu)의 안드로이드 스튜디오(선행 : 안스 설치)에서 코딩 후 테스트 실행시 "VT-x"나 "AMD-V"라는 단어가 포함된 에러 메세지가 뜨는 경우 해결방법
1. 해당 가상머신 선택 후 "설정" >> 좌측 리스트 "시스템" 클릭
2. 상단 탭 중 "프로세서" 탭 >> 아래의 "확장된 기능"에서 "네스티드 VT-x/AMD-V 사용하기" 체크박스에 체크 표시 >> ★확인★
  // 체크박스 비활성화 되어있으면 문의주세용(제가 겪은 문제라 해결 가능)



=====================건너뛰기 끝=====================



// 안드로이드 스튜디오 다운로드(윈도우OS용)
1. 구글에서 android studio 검색 >> 상위에 있는 큰글씨 링크 중에 Download Android Studio ~ 링크 아무거나 클릭(같은 창으로 들어감)
2. 화면에 바로 뜨는 DOWNLOAD ANDROID STUDIO 버튼 클릭
3. "본인은 상기 사용 약관~~~" 체크박스 옆에 체크 표시 >> 다운로드 버튼 클릭
4. 설치파일 다운로드 진행됨





// 안드로이드 스튜디오(줄여서 안스) 첫 실행시 설정
1. Do not ~ 체크 박스 체크 표시 후 "OK"
2. Don't send 선택 후 "next" 선택
3. standard 누르고 "next"
4. UI 고르기 >> "next" >> 설치 진행됨 >> finish
  // UI화면 고르기 : 무슨 화면으로 작업할지 선택하는 거





// 안드로이드 스튜디오에서 새 프로젝트 만들기
1. (첫 실행의 경우)안스 실행 >> Start a new Android Studio project 클릭
  // 프로젝트가 이미 있는 경우 상단 메뉴에서 File >> New >> New Project 선택하면 됨.
2. 상단의 탭 중 Phone and Tablet 선택 >> Empty Activity 선택 후 next
3. Config Your Project 화면에서 아래의 작업들을 수행
  1) name에 앱 이름 적기
    // 앱 이름 : 표면적으로 보여줄 어플리케이션 이름
      // 사람들이 앱 찾아야 할 때 검색할 이름
  2) package name에 패키지 이름 적기
    // 패키지 이름 설명
      // 앱의 고유 주소와도 같음. 앱의 정체성을 나타내는 이름.
      // com.a.b 형태의 이름에서 맨 뒤 이름(b)은 앱 이름으로 자동 생성됨(변경가능)
      // 가운데 이름(a)은 회사로 치면 '회사 이름'을 적는 곳. 맘대로 적으면 됨
      // com은 변경해도 된다고 나오지만 일반적으로는 변경하지 않음.
  3) language 눌러서 Java 선택
  4) Minimum SDK >> API 19: Android 4.4 (KitKat) 선택
    // Minimum SDK의 의미
      // 작성하려는 프로젝트가 최소 어느 버전의 안드로이드 API부터 지원할 것인지를 선택하라는 뜻이다.
      // 너무 높거나 적은 버전은 출시된 안드로이드 기기들 중 일부만 지원할 수도 있음.
4. Finish 누르면 프로젝트가 생성됨.





// 안드로이드 스튜디오에서 SDK 다운받기
  // SDK : 소프트웨어 개발 키트(Software Development Kit, SDK)
1. 선행 : 안드로이드 스튜디오 실행
2. 프로젝트를 연 상태에서 우측 상단 작은 버튼들 중 "정육면체 박스 아이콘" 클릭
  // 아이콘 위에 마우스 포인터를 가져다 대면 "SDK Manager"라고 뜸.
3. SDK Platforms에서 필요한 플랫폼 패키지 좌측에 체크박스 체크 표시
  // 수업에서는 "Android 10.0 (Q)" 하나만 선택해서 진행했음.
    // 어떤 버전의 플랫폼 패키지로 개발할 것인지 선택하는 작업
4. SDK Tools에서 필요한 도구들을 골라 좌측 체크박스에 체크 표시
  // 개발에 필요한 도구가 있을 때 선택해서 다운받을 수 있음.
  // 이하 강사님이 꼭 받으라고 하신 것
    1) Android SDK Build-Tools 30-rc4 (맨 첫번째에 있는 것)
    2) CMake
    3) Android Emulator
    4) Google Play services
    // 수시로 이 화면에 들어와서 업데이트를 체크해줘도 되고, 프로그램을 켰을 때 업데이트가 있으면 알아서 알려주는데 그 때 업뎃해도 됨.
5. "Apply" 클릭
6. 체크한 것들 중 업데이트가 있을 경우 Confirm Change 창이 뜸. >> OK 클릭
7. License Agreement 화면이 뜨면 아래에 Accept에 체크해주고 Next 클릭
8. 설치 진행됨
  // 코딩을 해야하는데 업뎃이 오래 걸릴 때는 업데이트 진행창 좌측 하단의 Background 버튼을 클릭해 업뎃 화면을 숨길 수 있음.
9. 설치가 끝나고 업뎃 창이 켜져있는 경우 Finish 버튼을 누르면 SDK 설치 & 업데이트 완료.





// 안드로이드 스튜디오에서 모듈(module) 만들기
  // 모듈의 뜻 : https://blog.shovelman.dev/647
1. 선행 : 안드로이드 스튜디오 실행
2. 프로젝트가 열려있는 상태에서 최상단 메뉴 File >> New >> New module 클릭
3. 아래로 드래그 >> Java or Kotlin Library 선택 >> Next
4. "라이브러리 이름"과 "클래스 이름"을 작성, Language: Java 선택 후 Finish 클릭
  // 여기서 Next버튼이 활성화 되어있으면 Next를 누르고 아래 작업 수행
    // SDK 버전 확인 >> Empty Activity 선택 >> Next >> Activity 이름 입력 >> Finish
5. 잘 만들어졌나 확인하기
  1) 화면 왼쪽에 있는 공간 위에 "Android▼" 버튼을 클릭 >> Packages 클릭
  2) 바로 아래의 목록에서 앱 이름 폴더명 옆의 ▶클릭(폴더 펼치기)
  3) 아까 작성한 라이브러리 이름의 폴더가 있으면 성공.
  // ▶라이브러리 이름 폴더 ▶한번 더 진입 ▶라이브러리 패키지 이름 폴더에 아까 작성한 "클래스 이름"으로 된 Java 파일이 있음.
    // 이 파일에서 psvm(메인함수 자동완성 코드) 써서 여태 자바 코드 실습해왔습니다 :) 이 파일(과 폴더)에서 자바 코딩 연습을 하시면 됩니다.





// 안드로이드 가상 시뮬레이터(AVD : Android Virtual Device) 만들기
  // 버추얼박스의 가상 머신과 '비슷'함.
  // 작성한 코딩이 기기에서 원하는대로 잘 돌아가는지 확인해보는 용도로 씀.
1. 선행 : 안드로이드 스튜디오 실행
2. 프로젝트를 연 상태에서 우측 상단에 있는 작은 아이콘들 중 핸드폰 모양 아이콘 클릭
  // 아이콘 위에 마우스 포인터를 가져다 대면 "AVD Manager"라고 뜸.
3. (AVD 첫 생성시) 중간 아래에 있는 "+ Create Virtual Device..." 버튼 클릭
  // 기기가 이미 있는 경우에는 좌측 하단에 이 버튼이 있음. 그거 누르면 됨.
4. 생성할 기기 선택 >> Next
  // 특별히 테스트해보고 싶은 기기가 있는 게 아닌 경우에는 기본적으로 선택되어있는 기기를 만듦. 여기서는 Pixel 2
5. R, Q, Pie, ...중 Q 선택 후 Next
  // SDK Platforms에서 설치한 그것임.
6. 가상기기의 이름을 적고(굳이 바꿀 필요 없으면 수정x) Finish 버튼 클릭.





// 안드로이드 스튜디오 추가 설정(선택 사항)
// 시스템 폰트(프로그램 전체, 에디터 화면 제외) 바꾸기
1. 상단 메뉴에서 File >> Settings... 선택
2. 왼쪽 메뉴에서 Appearance >> Use custom font 체크 표시하기 >> 폰트 및 사이즈 변경 >> OK(확인) 클릭
// 소스코드(에디터) 화면 폰트 바꾸기
1. 상단 메뉴에서 File >> Settings... 선택
2. 왼쪽 메뉴에서 Editor >> Font로 들어가서 폰트 설정 >> OK 클릭



★★★★★★★★ 버추얼 박스에 CentOS(센트OS)설치하기 ★★★★★★★★
*** 리눅스 터미널 명령어와 데이터베이스 명령어로 서버나 DB 등을 다루는 학습을 하기위해서 서버 역할을 해줄 가상 머신(가상 컴퓨터)를 만드는 작업.



// CentOS iso 다운받기
  1. 구글에 CentOS 검색 >> Download CentOS 링크 클릭
  2. CentOS Linux DVD ISO 버튼 클릭
  3. 상단 녹색 박스 아래에 있는 몇가지 중 하나를 클릭해 다운로드





// 버추얼 박스에 센트OS 생성
  1. "새로만들기" 클릭
  2. 이름에 "CentOS"라고 치면 자동으로 종류와 버전이 바뀜 >> 다음
  3. 메모리 - 2048MB >> 다음
  4. "지금 새 가상 하드디스크 만들기" >> 만들기
  5. '하드디스크 파일 종류'에서 "VDI" 선택 >> 다음
  6. "동적 할당" 선택 >> 다음
  7. '파일 위치 및 크기' 용량에 100GB 입력 >> 만들기





// 가상머신 기본 설정 :: 버추얼박스
  1. 우측 메뉴 중 네트워크 >> NAT(기본설정) 선택





// CentOS설치를 위해 ISO디스크 삽입하기
  1. OS생성 후 좌측 가상머신 리스트에서 CentOS 클릭 >> "설정" 클릭
  2. 우측 메뉴 중 저장소 >> 컨트롤러 : IDE 항목의 '비어있음' 클릭
  3. 우측 작은 디스크 버튼 클릭 >> Choose/Create a Virtual ~ 클릭
  4. "추가" >> 다운받은 CentOS iso 파일 선택 >> "선택" 클릭 >> "확인"





// 가상머신에서 Cent OS 설치
  1. 좌측 가상머신 리스트에서 CentOS 선택 후 "시작" 버튼 클릭
  2. Install CentOS Linux 8(첫 번째 항목) 선택(엔터) >> 실행창 뜸
  3. 언어 선택 >> Continue
  4. "네트워크 및 호스트 이름" >> 우측의 "끔"을 "켬"으로 전환 >> 완료
  5. "시간 및 날짜" >> 아시아 >> 서울 선택 >> 완료
    // "키보드", "언어 지원"은 임의로 더 추가할 수 있음
  6. "설치 목적지" 클릭 >> "완료" 클릭
  7. 우측 하단에 "설치 시작" 버튼이 활성화되면 클릭
  8. 설치중 "Root 암호"와 "User Creation" 생성
  9. 설치가 완료되고 우측 하단에 "재부팅"버튼이 활성화되면 클릭
  10. 재부팅 후 가상머신 전원off
  11. 다시 해당 가상기기의 설정으로 진입 >> 저장소 >> ISO파일 꺼내기
    // 작은 디스크 버튼 클릭 >> "가상 드라이브에서 디스크 꺼내기"를 누르면 됨.
    // 디스크 꺼내기 안하면 이 가상머신 켤 때마다 설치화면만 계속 뜸.





// 설치 완료 후 첫 실행시
  1. 냅두면 알아서 LICENSING 페이지로 넘어옴.
  2. License Information 클릭 >> 좌측 하단의 체크박스 클릭 >> "완료" 클릭
    // 약관 동의 버튼임.
  3. "설정 완료" 클릭 >> 로그인(일반 계정)
  4. 언어 선택 >> 다음 >> 쭉쭉 다음 클릭한 뒤 "CentOS Linux" 시작 클릭
    // 이후에 뜨는 "시작하기" 창은 그냥 튜토리얼. x버튼을 눌러서 꺼주면 된다.



====================================================



★★★★ Windows에서 서버(CentOS) 접속하는 방법(PuTTY :: 퍼티 활용) ★★★★
*** 윈도우에서 가상 머신(서버)에 원격으로 접속하는 방법.
*** 윈도우 외 운영체제(OS)에서는 PuTTY가 필요없음.



// PuTTY(퍼티) 다운로드 & 설치하기
  // PuTTY : 다른 서버에 원격접속할 수 있도록 도와주는 "윈도우 전용" 툴.
    // 이걸 통해서 리눅스 서버에 원격으로 접속해 설정 및 개발이 가능함.
  1. 구글에 PuTTY 검색
  2. Download PuTTY ~ 링크 클릭
  3. 최상단의 Download PuTTY에서 You can download PuTTY here.의 here. 클릭
  4. Package files - MSI (‘Windows Installer’) - 64-bit: 우측에 있는 ~.msi 링크 클릭
  5. 다운받은 파일을 실행해서 설치 진행(쭉 next 누르면 됨)





// CentOS에서 ssh(sshd) 설치하기 :: 서버 설치 & 설정
  1. 터미널 열기
  2. su 치고 엔터 >> ★root 암호★ 입력 후 엔터
    // CentOS 설치시 생성했던 root암호
    // su : 최상위 관리자, 슈퍼 관리자, 루트 계정, 슈퍼 유저(줄여서 su)
      // "어디에든" 접근 가능하고, 뭐든 다 읽거나 변경할 수 있는 권한을 가짐.
        // 시스템을 관리하는 폴더(etc 등)에 접근해 정보 등을 변경할 수 있음.
    // 슈퍼 유저로 로그인하는 과정임.
  3. OpenSSH 설치
    3-1. yum install openssh-server openssh-clients openssh-askpass 입력 후 엔터
    3-2. 뭐가 나오든 y 누르고 전부 설치.
  4. 설정 파일 수정 :: Port 22 부분 주석 해제하기
    4-1. vi /etc/ssh/sshd_config 입력 후 엔터
    4-2. 방향키를 눌러서 내려가 "# Port22"에 커서를 놓기
    4-3. Delete키를 눌러 #없애기
    4-4. Esc키 누르고 :q! 를 입력한 다음 엔터를 쳐서 빠져나오기.
      // ★ PuTTY(윈도우)에서 서버컴으로 연결할 수 있는 포트가 22로 설정됨.
  5. 설치 상태와 동작 상태 확인하기
    (1) yum list installed | grep ssh
    // ssh가 포함된 소프트웨어를 표시해주는 코드.
    // 검색한 단어(ssh)가 진하게 표시되는 파일들이 주루룩 나오면 설치 성공.
    (2) systemctl status sshd
    // sshd 동작상태 확인 코드
    // active (running)이 보이면 sshd가 '실행되고 있는 중'이라는 뜻.
      // 원격 접속이 가능해졌다는 뜻.
    // q를 눌러 빠져나올 수 있음.
    // systemctl에서 ctl은 컨트롤의 약자.
    (3) ps -ef | grep sshd
    // sshd 동작 상태 확인
    // sshd가 진하게 표시된 상태로 나오면 OK(라고 알고있습니다..)





// CentOS(리눅스)의 ip주소 알아내기 (CentOS에서)
  1. 터미널 실행
    1-1. CentOS 가상머신 실행
    1-2. 메인화면에서 좌측 상단의 "현재 활동" 클릭
    1-3. 좌측 하단의 [>_ ] 아이콘을 클릭해서 터미널 실행.
      // 검색창에 terminal을 검색해서 실행해도 됨.
  2. ifconfig -a 치고 엔터
  3. enp0 s3: 와 lo: 에 있는 inet을 기록(복붙 등)
    // 예시) enp0 s3: 의 inet 10.0.2.15, lo: 의 inet 127.0.0.1
  4. [문제 해결] 위 명령을 실행했는데 IP주소가 안 보일 때
    // ★ IP주소가 보여야 다음 단계가 진행이 가능함.
    // 선행 : 인터넷(네트워크) 연결이 되어있는지부터 체크
      // 이하 네트워크 연결이 되어있는데도 IP주소가 안 보일 때 명령어(아마도)
    // 아래의 두 명령어는 하나의 과정이 아니라 따로따로 실행되는 것임.
    1) system-config-network-tui
    2) systemctl restart network-online.target





// 서버OS 포트포워딩하기 :: in 버추얼박스
  1. 서버OS(CensOS) 선택 >> 설정 >> 네트워크
  2. 고급 >> "포트포워딩" 버튼 클릭
  3. 우측 상단의 조그만 버튼 클릭 후 양식 입력
    // 프로토콜은 "TCP" 선택
       호스트 IP : 127.0.0.1 / 호스트 포트 : 22
       게스트 IP : 10.0.2.15 / 게스트 포트 : 22
  4. "확인" 버튼 누르면서 설정화면 전부 빠져나오기
  5. 네트워크 설정 후에는 서버(CentOS)를 재부팅해야 적용된다.





// PuTTY에서 CentOS 서버에 접속하기(최종목적)
  // 주의사항
    // 서버(여기서는 CentOS)에 ssh 설치가 선행되어야 함.
    // 서버가 꺼져있는 상태로는 접속이 불가.
    // 서버와 PuTTY를 실행하는 두 곳 중 한 군데 어디라도 네트워크 연결이 안 되어있으면 접속이 불가.
  1. "PuTTY" 실행
  2. "Host Name (or IP address)"에 lo: 의 inet 주소(127.0.0.1)를 입력.
  3. Connection type은 "SSH" 선택.
  4. 하단의 "Open" 클릭.
  5. 이 호스트 신뢰할 수 있냐 어쩌고 묻는 영문 메세지창 뜨는데 Yes.
    // 안 떠도 괜찮음.
  6. 실행창에 로그인 화면(login as: )이 뜨면 원격 접속 성공.
  7. 유저 아이디와 패스워드를 쳐서 로그인.
  // PuTTY 실행 중간에도 둘 중에 하나의 기기나 네트워크가 꺼지면 연결 해제됨(편집불가)



===================================================



★★★ CentOS(리눅스)에서 DBMS(MariaDB) 다운로드 & 설치 & 설정하기 ★★★
*** DBMS : 데이터베이스를 관리하는 소프트웨어 (database management system)
*** MariaDB(MySQL) : 오픈소스(무료) DBMS (MySQL은 부분유료)
*** 즉 이 과정은 서버 컴퓨터에 데이터베이스 관리 소프트웨어를 설치하는 과정
*** PuTTY(퍼티)는 복붙이 쉬우니까 긴 코드는 복붙해서 사용하세요
*** 퍼티 내 붙여넣기 >> 우클릭
*** 아래에 적은 코드들 복사할 때에는 시작부분 알파벳 앞에 띄어쓰기나 기호 있으면 제외하고 복사해주세요



// MariaDB(마리아디비) 설치하기
1. PuTTY(퍼티)를 켜서 서버(CentOS)에 접속
2. 슈퍼 계정으로 로그인 ( su 치고 엔터 >> root 패스워드 입력 후 엔터 )
3. 로그인 직후 초기 화면(Documents 폴더)에서 아래 코드 "한줄씩 각각" 실행
  yum install wget
  vi /etc/yum.repos.d/MariaDb.repo
  // 두번째 명령어 치고 엔터 누르면 MariaDb.repo 파일을 만드는 에디터가 열림
4. 여기서 잠시 인터넷 창(익스플로러, 크롬 등)을 켜고
   https://downloads.mariadb.org/mariadb/repositories 에 접속
5. 바로 보이는 네모박스(Choose a Distro) 밑에 있는 CentOS 클릭
6. 뒤이어 나오는 창에서 CentOS 8 (x86_64) 클릭
7. 10.4 [Stable] 클릭
  // 현재 10.4 버전이 '안정된(stable)' 버전임을 의미
8. 아래에 뜨는 네모 박스에서 [mariadb] 부분부터 gpgcheck=1(박스 마지막) 부분까지 드래그한다음 복사
  // 이 페이지에서 더 복붙할 게 남아있으므로 아직 끄지말 것
9. 다시 퍼티로 돌아와서 i를 누르고 띄워놓은 MariaDb.repo 에디터 창에 우클릭해서 그대로 붙여넣기
  // i : 에디터를 편집(write) 가능 모드로 전환시켜주는 키. a나 o도 가능
10. Esc 키 >> :wq 입력하고 엔터
  // Esc : 편집모드에서 읽기(read)모드로 돌아옴
  // :wq : 편집 내용을 저장한 다음 에디터를 종료함
11. [mariadb]~를 복사했던 페이지로 돌아와서 그 아래에 있는 박스의 첫 줄을 복사 >> 퍼티에 붙여넣어서 실행(엔터)
12. 다시 웹페이지로 돌아와서 아랫줄도 퍼티에 복붙한 다음 엔터
  // systemctl start mariadb  ::  MariaDB를 실행(시작)시키는 명령어임.
  // 별도로 MariaDB 작동 상태 확인하기
    // systemctl status mariadb
      // dead : 서버가 중지되어 있다는 뜻
        // 별도의 설정을 하지 않으면 서버를 껐다 켰을 때 서버는 기본적으로 꺼져있음.
      // active (running) : 서버가 켜져있다는 뜻
13. systemctl enable mariadb 치고 엔터
  // 서버 부팅할 때(서버컴 켤 때) 자동으로 mariadb 실행되도록 하기
14. CentOS 리부트(재부팅)
  // 퍼티에서 shutdown -r now 치고 엔터 눌러도 같은 효과.





// MariaDB 설치 후 루트 비밀번호 설정하기 (계속 퍼티임)
  // 얘"도" 루트 비밀번호 설정이 필요함(mariadb 접속시 기본적으로 요구).
  // CentOS에 설정한 루트 비밀번호와 다름.
1. su 쳐서 슈퍼 계정으로 접속
2. mysqladmin -u root password 'abcde'  <-- 작은따옴표 안에 설정할 패스워드 입력(abcde는 예시)
  // 패스워드 너무 쉬우면 빠꾸먹임(경험담)





// 퍼티에서 DBMS(MariaDB) 들어가기
1. mysql -u root -p 치고 엔터
  // mariadb에 root 계정으로 로그인하는 방법
  // -u는 유저, -p는 패스워드를 뜻함
2. MariaDB의 root 비밀번호 입력 >> 엔터
3. 입력 후 첫 문장에 Welcome to the MariaDB monitor.가 보이면 진입 성공.
4. MariaDB 종료하기
  // exit 아니면 quit 치고 엔터
5. [문제 해결] MariaDB에 접속이 안 될 때
  // 버추얼박스에서 MariaDB 포트포워딩하기
  1) 서버OS(CensOS) 선택 >> 설정 >> 네트워크
  2) 고급 >> "포트포워딩" 버튼 클릭
  3) 우측 상단의 조그만 버튼 클릭 후 양식 입력
    // 호스트 IP : 127.0.0.1 / 호스트 포트 : 3306
       게스트 IP : 10.0.2.15 / 게스트 포트 : 3306
  4) "확인" 버튼 누르면서 설정화면 전부 빠져나오기
    // 이렇게 설정한 경우 추후 Workbench를 설치할 때 중간에 막힘
      // 이 때는 그냥 Workbench 설치 전에 다시 이 설정으로 들어와서 3306 포트포워딩을 지워주면 됨.





// MariaDB의 포트 번호 보기 (퍼티퍼티)
  // MariaDB 빠져나와서(종료하고) 실행할 것.
    // Ctrl+C or quit
// netstat -anp | grep 3306 치고 엔터
  // 설치된 DBMS 프로그램 이름과 설정된 포트번호가 무엇인지 확인할 수 있는 명령어
  // ★ MariaDB의 포트 번호는 3306 (포트 번호 기억해두면 쓸 데 있음)
  // 출력화면 맨 아래에 "숫자n자리/mysqld" 확인
    // 설치한(실행되는) 프로그램 이름임.



==================================================



★★★★ MySQL Workbench 다운로드 & 설치 & MariaDB에 연결하기 ★★★★
*** 퍼티로 CentOS(리눅스)에 접속해서 DBMS(mariadb)로 진입하지 않고, Windows에서 바로 mariadb에 진입 및 손쉽게 편집할 수 있는 프로그램을 설치
*** 앞으로 데이터베이스 문법(SQL)은 Workbench에서 배우고 작업합니다.



// MySQL Workbench 다운로드
1. 구글에 MySQL Workbench 검색
2. MySQL Workbench - MySQL링크 밑에 있는 Download MySQL Workbench 클릭
3. Go to Download Page(파란색 버튼) 클릭
4. 다운받을 수 있는 두 파일을 확인하고, 용량이 큰 것(420메가짜리)의 우측 다운로드 버튼 클릭
5. 로그인, 사인업 버튼 누르지 말고 밑의 No thanks, just start my download. 링크 클릭
6. 설치 파일 다운로드가 진행됨





// MySQL Workbench 설치하기
1. 위 과정에서 다운로드해서 받은 파일(설치 파일) 열기
2. Choosing a Setup Type 화면 >> Developer Default 선택 후 "Next"
3. Check Requirments 화면 >> 하단의 "Execute" 버튼 클릭
  // 설치 진행되면서 나오는 모든 프로그램들 모두 설치
4. 설치 후 Next 누르고 경고창 뜨면 Yes 버튼 클릭
5. Installation 화면 >> 하단의 Execute 클릭 >> 설치 진행 >> "Next"
6. Product Configuration 화면 >> 그냥 Next
7. High Availability 화면 >> 그냥 Next
8. Type and Networking 화면 >> Port 옆에 적힌 번호(3306) 확인하고 Next
9. Authentication Method 화면 >> 그냥 Next
10. Accounts and Roles 화면 >> MariaDB에 설정했던 root 비밀번호를 두 번 입력 >> Next
11. Windows Service 화면 >> 그냥 Next
12. Apply Configuration 화면 >> Execute 클릭 >> Finish 버튼 활성화되면 클릭
13. 다시 Product Configuration 화면 >> 그냥 Next
14. MySQL Router Configuration 화면 >> 그냥 Finish 클릭
15. 다시 Product Configuration 화면 >> 그냥 Next
16. Connect To Server 화면 >> root 밑에 아까 쓴 root 패스워드 입력하고 Check 클릭 >> 초록색으로 "Connection succeeded."가 뜨면 Next
17. 다시 Apply Configuration 화면 >> 그냥 Execute 클릭 >> 다 진행되면 Finish 클릭
18. 다시 Product Configuration 화면 >> 그냥 Next
19. Installation Complete 화면 >> Finish!!!!!
20. 이 뒤에 실행되는 cmd 화면(검은 창)은 그냥 꺼주면 됨.





// MySQL Workbench에서 DBMS(MariaDB) 연결하기
1. MySQL Workbench 실행
2. 왼쪽 중간에 MySQL Connections 옆 작은 +버튼 클릭
3. 아래의 설정 입력 & 확인
  1) Connection Name >> MariaDB 입력
  2) Hostname >> 127.0.0.1인지 체크
    // 본 컴퓨터가 자기 자신을 가리키는 네트워크 주소
    // 위 숫자는 다른 컴퓨터에서도 자기 자신을 가리키는 주소로서 고정되어 있음.
  3) Port >> 3306인지 체크
    // MariaDB의 포트 번호
  4) Username >> root인지 체크
    // MariaDB를 등록하고 있으므로 MariaDB의 root계정임을 의미함.
  5) Password >> 옆 Store in Valut ... 선택 >> 위 루트 계정의 비밀번호 입력 >> "OK"
4. 오른쪽 아래 버튼 중 Test Connection 클릭
  // 추가하려는 DBMS와 잘 연결되는지 테스트해줌.
  // 여기서 테스트 커넥션이 안 되는 것은 MariaDB의 root 권한으로 접속하려고 하기 때문일 수 있음.
  // root가 다른 네트워크를 통해 MariaDB로 접속할 수 있도록 허용해주는 명령어를 입력해야 함
    // 푸티 - MariaDB에 루트 권한으로 접속하기
    1) use mysql;
    2) grant all privileges on *.* to root@'%' identified by 'rootpasswd';
      // 'rootpasswd'에는 MariaDB의 루트 패스워드를 입력
      // % 표시 : root가 다른 네트워크를 통해 MariaDB에 접속하는 걸 허용한다는 뜻.
5. "Successfully made the MySQL connection" 메세지 창이 뜨면 "OK" >> "OK"
6. 첫 화면의 MySQL Connections 밑에 새 연결(MariaDB)이 생성되면 성공.