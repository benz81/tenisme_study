> AWS 학습 링크집 시리즈
- AWS 학습 자료집 http://bit.ly/aws-study-resource
- AWS 공인 솔루션스 아키텍트 - 어소시에이트 수험 가이드  http://bit.ly/sacertguide
- AWS 공인 개발자 - 어소시에이트 수험 가이드  http://bit.ly/devcertguide
- AWS 보안 관련 컨텐츠 모음집  http://bit.ly/seccontents

---

# AWS 공인 개발자 - 어소시에이트 수험 가이드(http://bit.ly/devcertguide)

> 이 문서는 2019년 1월 13일부터 시행중인 AWS 공인 개발자 - 어소시에이트 자격증 시험의 [시험 안내서](https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS_Certified_Developer_Associate-Exam_Guide_EN_1.4.pdf)에 적힌 내용에 기반하여 AWS의 홈페이지, 블로그, Slideshare의 관련 링크를 한글 자료 중심으로 정리해 놓은 것 입니다. 

## 기본적인 시험 정보
- [시험 안내 페이지](https://aws.amazon.com/ko/certification/certified-developer-associate/)
- [시험 신청](https://www.aws.training/certification?src=dev-assoc)
- [샘플 문항](https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS_Certified_Developer-Associate_Sample_Questions_v2.0_FINAL.pdf): 시험을 신청하기 전에 반드시 풀어서 자신이 시험을 볼 준비가 되어 있는지 확인하세요.
- **[AWS 공인 개발자 - 어소시에이트 시험 준비 무료 온라인 강의](https://www.aws.training/SessionSearch?pageNumber=1&courseId=18953)**
- [AWS기반 개발 강의](https://aws.amazon.com/ko/training/course-descriptions/developing/): 3일동안 강의와 실습으로 진행되는 수업이며 이 수업에서 다루는 내용이 바로 AWS 솔루션스 아키텍트 자격증시험의 출제 범위가 됩니다. 이 과정에서 배우게 될 내용은 다음과 같습니다.
    - Java, C#/.NET, Python 및 JavaScript용 AWS SDK 및 개발자 자격 증명을 설정
    - AWS SDK를 사용하여 AWS 서비스와 상호 작용하고 솔루션을 개발
    - AWS Identity and Access Management(IAM)를 사용하여 서비스 인증
    - Amazon Simple Storage Service(Amazon S3) 및 Amazon DynamoDB를 데이터 스토어로 사용
    - AWS Lambda, Amazon API Gateway, Amazon Simple Queue Service(Amazon SQS), Amazon Simple Notification Service(Amazon SNS) 및 AWS Step Functions를 사용하여 애플리케이션과 데이터를 통합
    - 웹 자격 증명 프레임워크 및 Amazon Cognito를 사용하여 사용자 인증
    - Amazon ElastiCache를 사용하여 애플리케이션 확장성을 개선
    - 개발 과정에서 컨테이너를 사용
    - CI/CD 파이프라인을 활용해 AWS에서 애플리케이션을 배포

- [**시험 안내서**](https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS_Certified_Developer_Associate-Exam_Guide_EN_1.4.pdf): 수험 준비를 위해 대단히 중요한 문서이므로 꼼꼼히 읽어 두셔야 합니다. 이 문서는 이 시험 안내서에 기반하여 작성되었습니다.
- [연습시험 응시](https://www.aws.training/certification?src=dev-assoc): 20문제가 출제되고 유료(20달러) 입니다.
- [영문 시험 시간 추가 요청 방법](http://bit.ly/MORE_TIME): 영문으로 시험을 보실 경우 30분 시험시간을 추가하실 수 있습니다.**주의! 반드시 시험 신청 하시기 전에 시험시간 추가 신청을 하셔야 합니다!**

### 이 시험이 검증하고자 하는 것
- 핵심 AWS 서비스, 사용 방법 및 기본적인 AWS 아키텍처의 모범 사례 이해
- AWS를 사용하여 클라우드 기반 애플리케이션을 능숙하게 개발, 배포 및 디버깅하는 능력
제시

### 이 시험을 보기위해 필요한 지식들
- AWS 기반 애플리케이션을 개발하고 유지 관리한 실무 경험 1년 이상
- 한 가지 이상의 고급 프로그래밍 언어에 대한 심층 지식
- 핵심 AWS 서비스, 사용 방법 및 기본 AWS 아키텍처의 모범 사례 이해
- AWS를 사용하여 클라우드 기반 애플리케이션을 능숙하게 개발, 배포 및 디버깅
- AWS 서비스 API, AWS CLI, SDK를 사용하여 애플리케이션을 작성하는 능력
- AWS 서비스의 주요 기능을 식별하는 능력
- AWS 공동 책임 모델의 이해
- 애플리케이션 수명 주기 관리 이해
- CI/CD 파이프라인을 통해 AWS에서 애플리케이션을 배포하는 능력
- AWS 서비스를 사용하거나 이 서비스와 상호 작용하는 능력
- 클라우드 기본 애플리케이션에 대한 기본 지식을 응용하여 코드를 작성하는 능력
- AWS 보안 모범 사례에 따라 코드를 작성하는 능력(예: 코드에 보안 키와 액세스 키를 사용하지 않고 그 대신 IAM 역할을 이용)
- AWS에서 코드 모듈을 작성, 유지 관리 및 디버깅하는 능력
- 서버리스 애플리케이션의 코드를 능숙하게 작성하는 능력
- 개발 과정에서 컨테이너를 사용하는 방법 이해

### 시험 결과
시험 결과는 100점에서 1,000점까지의 점수 단위로 제시되며 최저 합격선은 **720점**입니다. 이 점수로 합격 여부는 물론 전체 시험을 어떻게 치렀는지도 알 수 있습니다. 난이도에 약간 차이가 있을 수 있는 여러 가지 시험 문제 간에 점수를 등치시키기 위해 환산 점수 모델을 사용합니다. 시험후에 확인 가능한 채점표는 섹션 단위별로 표시되며 과락은 없이 전체 시험에 대한 통과 여부로만 합격/불합격이 결정됩니다.

## 시험 요령
 
- 시험준비에 충분히 시간을 들여야 합니다. 이 문서에 링크가 달려있는 문서의 양을 보시면 아시겠지만 범위가 상당히 많습니다. 
- 문제는 단순 암기식보다는 개별 서비스의 특징과 이를 사용한 아키텍처를 이해하여 시스템을 구현할 수 있는 능력을 확인하는데 초점이 맞춰져 있습니다.
- [온라인 무료 시험준비 강의](https://www.aws.training/SessionSearch?pageNumber=1&courseId=18953)가 한글 자막과 함께 제공되고 있으니 꼭 수강하시기 바랍니다.
- 시험범위가 [AWS기반 개발 강의](https://aws.amazon.com/ko/training/course-descriptions/developing/)와 일치 하기 때문에 수업을 수강하시는 것이 시험 준비에 유리합니다.
- 여기 소개된 문서들은 AWS 개요 -> 각 서비스별 FAQ -> 백서 -> 모범사례 순으로 읽어 나가는 것이 좋습니다.
- 시험은 130분동안 65문제를 풉니다. 짧은 시간에 많은 문제를 풀어야 하므로 시간 관리가 매우 중요합니다. 위의 링크를 통해 꼭 30분 연장 신청을 미리 하세요.
- 시험은 서비스 FAQ문서와 모범사례에서 많이 출제 됩니다. FAQ 문서를 읽어 개별 서비스의 특징을 파악한 후 모범 사례를 숙지해야 합니다.
- 시험보는 도중에 영어 원문 확인이 가능합니다.
- 합격선은 1000점 만점에 720점 입니다. 너무 어려운 문제에 시간과 맨탈을 사용하기 보다는 적당히 포기하면서 풀어가는 페이스 유지가 중요합니다.
- 무료로 제공되는 [샘플 문항](https://d1.awsstatic.com/training-and-certification/docs-dev-associate/AWS_Certified_Developer-Associate_Sample_Questions_v2.0_FINAL.pdf)과 20달러 유료 테스트 시험을 보실 수 있습니다. 실제 시험의 점수와 싱크율이 높기 때문에 모의 고사 본다는 느낌으로 시험을 보는 것이 시험 준비에 많은 도움이 됩니다. 연습문제는 여러번 봐도 동일한 문제가 출제되므로 한 번만 봐도 충분합니다.

## 백서와 모범 사례
> 시험준비를 위해 꼭 읽어보셔야 하는 문서들 입니다.
- [AWS 백서](https://aws.amazon.com/ko/whitepapers/)
  - [AWS 한국어 설명서 목록](https://aws.amazon.com/ko/blogs/korea/ko-documentation/)
  - [Amazon Web Services 개요](https://d1.awsstatic.com/International/ko_KR/whitepapers/aws-overview.pdf)
  - Architecting for the Cloud(2018년10월)
    - [AWS 모범 사례 번역 1/2](https://medium.com/@buw/architecting-for-the-cloud-aws-%EB%AA%A8%EB%B2%94-%EC%82%AC%EB%A1%80-kor-1-2-6e9003d11b46)
    - [AWS 모범 사례 번역 2/2](https://medium.com/@buw/architecting-for-the-cloud-aws-%EB%AA%A8%EB%B2%94-%EC%82%AC%EB%A1%80-kor-2-2-d1d4d489f737)
  - [AWS 보안 모범 사례(2016년8월)](https://d1.awsstatic.com/whitepapers/Security/KO_Whitepapers/AWS_Security_Best_Practices_KO.pdf)
  - [Practicing Continuous Integration and Continuous Delivery on AWS(2017년6월)](https://d1.awsstatic.com/whitepapers/DevOps/practicing-continuous-integration-continuous-delivery-on-AWS.pdf)
  - [AWS Well-Architected Framework 한국어 번역(2016년 11월)](https://d2908q01vomqb2.cloudfront.net/7b52009b64fd0a2a49e6d8a939753077792b0554/2017/02/02/Well-Architected_Whitepaper_ko-2016-11.pdf)
  - [AWS Lambda를 사용한 서버리스 아키텍처](https://d1.awsstatic.com/whitepapers/serverless-architectures-with-aws-lambda.pdf)
  - [Microservices on AWS](https://d1.awsstatic.com/whitepapers/microservices-on-aws.pdf)
  - [보안 모범 사례 한국어 번역(2016년8월)](https://d1.awsstatic.com/whitepapers/Security/KO_Whitepapers/AWS_Security_Best_Practices_KO.pdf)
  - [Implementing Microservices on AWS](https://d1.awsstatic.com/whitepapers/microservices-on-aws.pdf)
  - [Optimizing Enterprise Economics with Serverless Architectures](https://d1.awsstatic.com/whitepapers/optimizing-enterprise-economics-serverless-architectures.pdf)
  - [Running Containerized Microservices on AWS](https://d1.awsstatic.com/whitepapers/DevOps/running-containerized-microservices-on-aws.pdf)
  - [Blue/Green Deployments on AWS](https://d1.awsstatic.com/whitepapers/AWS_Blue_Green_Deployments.pdf)

## 시험에서 주로 언급되는 서비스 관련 문서들
- [EC2](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/concepts.html) : AWS의 핵심서비스인 만큼 EC2에 대한 내용은 무척 비중있게 다루어집니다.
  - [인스턴스 및 AMI](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/ec2-instances-and-amis.html)
  - [인스턴스 유형](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/instance-types.html)
  - [인스턴스 구입 옵션](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/instance-purchasing-options.html)
  - [리전 및 가용 영역](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/using-regions-availability-zones.html)
  - [Amazon EC2 루트 디바이스 볼륨](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/RootDeviceStorage.html)
  - [Amazon EC2 모니터링](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/monitoring_ec2.html)
  - [네트워크 및 보안](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EC2_Network_and_Security.html)
  - [스토리지](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/Storage.html)
  - [Amazon EC2 인스턴스 스토어](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/InstanceStorage.html)
  - [Auto Scaling 설명서](http://docs.aws.amazon.com/ko_kr/autoscaling/latest/userguide/WhatIsAutoScaling.html)
  - [탄력적 네트워크 인터페이스(ENI:Elastic Network Interface)](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/using-eni.html)
  - [EIP](https://aws.amazon.com/ec2/faqs/)
  - [인스턴스 메타데이터 및 사용자 데이터](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
- [VPC](https://aws.amazon.com/ko/vpc/faqs/)
  - [VPC 사용자 가이드](http://docs.aws.amazon.com/ko_kr/AmazonVPC/latest/UserGuide/VPC_Introduction.html)
  - [VPC 피어링이란?](http://docs.aws.amazon.com/ko_kr/AmazonVPC/latest/PeeringGuide/Welcome.html)
  - [Amazon Virtual Private Cloud 를 이용한 IT 인프라의 확장](http://d0.awsstatic.com/International/ko_KR/whitepapers/Extend%20your%20IT%20infrastructure%20with%20Amaon%20VPC.pdf)
- [ELB](https://aws.amazon.com/ko/elasticloadbalancing/faqs/)
- [AWS Lambda](https://aws.amazon.com/ko/lambda/faqs/)
- [AWS Serverless Application Model](https://github.com/awslabs/serverless-application-model
)
- [Amazon API Gateway](https://aws.amazon.com/ko/api-gateway/faqs/)
- [AWS Step Functions](https://aws.amazon.com/ko/step-functions/faqs/)
- [Amazon Cognito](https://aws.amazon.com/ko/cognito/faqs/)
- [AWS IAM](https://aws.amazon.com/ko/iam/faqs/)
- [Amazon DynamoDB](https://aws.amazon.com/ko/dynamodb/faqs/)
  - [SQL에서 NoSQL로](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/SQLtoNoSQL.html)
  - [프로비저닝된 처리량](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/HowItWorks.ProvisionedThroughput.html)
  - [DynamoDB의 쿼리 및 스캔 작업](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/QueryAndScan.html)
  - [파티션 및 데이터 배포](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/HowItWorks.Partitions.html)
  - [DynamoDB에서 보조 인덱스를 사용하여 데이터 액세스 향상](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/SecondaryIndexes.html)
  - [DynamoDB의 테이블 작업](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/WorkingWithTables.html)
  - [DynamoDB에서의 항목 작업](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/WorkingWithItems.html)
  - [DynamoDB 및 AWS SDK를 사용한 프로그래밍](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/Programming.html)
  - [컴퓨터에서 DynamoDB 실행](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/DynamoDBLocal.html)
  - [DynamoDB Streams를 사용하여 Table Activity 캡처하기](https://docs.aws.amazon.com/ko_kr/amazondynamodb/latest/developerguide/Streams.html)
- [Elastic Beanstalk](https://aws.amazon.com/ko/elasticbeanstalk/faqs/)
  - [Elastic Beanstalk를 이용한 웹 앱 배포](http://docs.aws.amazon.com/ko_kr/gettingstarted/latest/deploy/overview.html)
  - [Elastic Beanstalk 환경에 애플리케이션 배포](https://docs.aws.amazon.com/ko_kr/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html)
- [EBS](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EBSVolumes.html)
  - [EBS FAQ](https://aws.amazon.com/ko/ebs/faqs/)
  - [EBS 볼륨 유형](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EBSVolumeTypes.html)
  - [EBS 스냅샷](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EBSSnapshots.html)
  - [EBS 암호화](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EBSEncryption.html)
  - [Linux 인스턴스의 Amazon EBS 볼륨 성능](http://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/EBSPerformance.html)
- [EFS](https://aws.amazon.com/ko/efs/faq/)
- S3
  - [Amazon S3 FAQ](https://aws.amazon.com/ko/s3/faqs/)
  - [Amazon S3 리소스에 대한 액세스 권한 관리](https://docs.aws.amazon.com/ko_kr/AmazonS3/latest/dev/s3-access-control.html)
  - [S3 스토리지 클래스](https://aws.amazon.com/ko/s3/storage-classes/)
  - [S3 Reduced Redundancy Storage](https://aws.amazon.com/ko/s3/reduced-redundancy/)
- [CloudFormation](https://aws.amazon.com/ko/cloudformation/faqs/)
- [OpsWorks](https://aws.amazon.com/ko/opsworks/faqs/)
- [Amazon SNS](https://aws.amazon.com/ko/sns/faqs/)
- [Amazon SQS](https://aws.amazon.com/ko/sqs/faqs/)
- [AWS Storage Gateway](https://aws.amazon.com/ko/storagegateway/faqs/)
- [Amazon Kinesis](https://aws.amazon.com/ko/kinesis/streams/faqs/)
- [Amazon EMR](https://aws.amazon.com/ko/emr/faqs/)
- [AWS Direct Connect](https://aws.amazon.com/ko/directconnect/)
- [AWS Import/Export](https://aws.amazon.com/ko/documentation/importexport/?nc1=h_ls)
- [AWS Directory Service](https://aws.amazon.com/ko/directoryservice/faqs/)
- [Amazon Route53](https://aws.amazon.com/ko/route53/details/)
- [Amazon CloudFront](https://docs.aws.amazon.com/ko_kr/AmazonCloudFront/latest/DeveloperGuide/Introduction.html)
- [Amazon ECS](https://aws.amazon.com/ko/ecs/faqs/)
  - [AWS ECR](https://aws.amazon.com/ko/ecr/faqs/)
  - [AWS Fargate](https://aws.amazon.com/ko/fargate/faqs/)
  - [Amazon EKS](https://aws.amazon.com/ko/eks/faqs/)
- [AWS KMS](https://aws.amazon.com/ko/kms/faqs/)
- [Amazon MQ](https://aws.amazon.com/ko/amazon-mq/faqs/)

